[{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-python-pytorch","task_id":"spatial_decomposition","code_url":"https://github.com/BayraktarLab/cell2location/tree/v1.0.0/openproblems/tasks","method_id":"cell2location_detection_alpha_1","commit_sha":"154ccb9fd99113f3d28d9c3f139194539a0290f9","paper_name":"Cell2location maps fine-grained cell types in spatial transcriptomics","paper_year":2022,"references":"kleshchevnikov2022cell2location","is_baseline": false,"method_name":"Cell2location (alpha=1, reference hard-coded)","code_version":"v1.0.0","method_summary":"Cell2location is a decomposition method based on Negative Binomial regression that is able to account for batch effects in estimating the single-cell gene expression signature used for the spatial decomposition step. Note that since batch information is unavailable in this task, here we use either a hard-coded reference, or a negative-binomial learned reference without batch labels. The parameter alpha refers to the detection efficiency prior.","paper_reference":"kleshchevnikov2022cell2location","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/cell2location.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-python-pytorch","task_id":"spatial_decomposition","code_url":"https://github.com/BayraktarLab/cell2location/tree/v1.0.0/openproblems/tasks","method_id":"cell2location_amortised_detection_alpha_20","commit_sha":"154ccb9fd99113f3d28d9c3f139194539a0290f9","paper_name":"Cell2location maps fine-grained cell types in spatial transcriptomics","paper_year":2022,"references":"kleshchevnikov2022cell2location","is_baseline": false,"method_name":"Cell2location (alpha=20, amortised, hard-coded)","code_version":"v1.0.0","method_summary":"Cell2location is a decomposition method based on Negative Binomial regression that is able to account for batch effects in estimating the single-cell gene expression signature used for the spatial decomposition step. Note that since batch information is unavailable in this task, here we use either a hard-coded reference, or a negative-binomial learned reference without batch labels. The parameter alpha refers to the detection efficiency prior.","paper_reference":"kleshchevnikov2022cell2location","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/cell2location.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-python-pytorch","task_id":"spatial_decomposition","code_url":"https://github.com/BayraktarLab/cell2location/tree/v1.0.0/openproblems/tasks","method_id":"cell2location_detection_alpha_20_nb","commit_sha":"154ccb9fd99113f3d28d9c3f139194539a0290f9","paper_name":"Cell2location maps fine-grained cell types in spatial transcriptomics","paper_year":2022,"references":"kleshchevnikov2022cell2location","is_baseline": false,"method_name":"Cell2location (alpha=20, NB reference)","code_version":"v1.0.0","method_summary":"Cell2location is a decomposition method based on Negative Binomial regression that is able to account for batch effects in estimating the single-cell gene expression signature used for the spatial decomposition step. Note that since batch information is unavailable in this task, here we use either a hard-coded reference, or a negative-binomial learned reference without batch labels. The parameter alpha refers to the detection efficiency prior.","paper_reference":"kleshchevnikov2022cell2location","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/cell2location.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-python-pytorch","task_id":"spatial_decomposition","code_url":"https://github.com/BayraktarLab/cell2location/tree/v1.0.0/openproblems/tasks","method_id":"cell2location_detection_alpha_20","commit_sha":"154ccb9fd99113f3d28d9c3f139194539a0290f9","paper_name":"Cell2location maps fine-grained cell types in spatial transcriptomics","paper_year":2022,"references":"kleshchevnikov2022cell2location","is_baseline": false,"method_name":"Cell2location (alpha=20, reference hard-coded)","code_version":"v1.0.0","method_summary":"Cell2location is a decomposition method based on Negative Binomial regression that is able to account for batch effects in estimating the single-cell gene expression signature used for the spatial decomposition step. Note that since batch information is unavailable in this task, here we use either a hard-coded reference, or a negative-binomial learned reference without batch labels. The parameter alpha refers to the detection efficiency prior.","paper_reference":"kleshchevnikov2022cell2location","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/cell2location.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-python-pytorch","task_id":"spatial_decomposition","code_url":"https://github.com/BayraktarLab/cell2location/tree/v1.0.0/openproblems/tasks","method_id":"cell2location_detection_alpha_200","commit_sha":"154ccb9fd99113f3d28d9c3f139194539a0290f9","paper_name":"Cell2location maps fine-grained cell types in spatial transcriptomics","paper_year":2022,"references":"kleshchevnikov2022cell2location","is_baseline": false,"method_name":"Cell2location (alpha=200, reference hard-coded)","code_version":"v1.0.0","method_summary":"Cell2location is a decomposition method based on Negative Binomial regression that is able to account for batch effects in estimating the single-cell gene expression signature used for the spatial decomposition step. Note that since batch information is unavailable in this task, here we use either a hard-coded reference, or a negative-binomial learned reference without batch labels. The parameter alpha refers to the detection efficiency prior.","paper_reference":"kleshchevnikov2022cell2location","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/cell2location.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-python-pytorch","task_id":"spatial_decomposition","code_url":"https://github.com/YosefLab/scvi-tools/tree/v1.0.0/openproblems/tasks","method_id":"destvi","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"DestVI identifies continuums of cell types in spatial transcriptomics data","paper_year":2022,"references":"lopez2022destvi","is_baseline": false,"method_name":"DestVI","code_version":"v1.0.0","method_summary":"destVI is a decomposition method that leverages a conditional generative model of spatial transcriptomics down to the sub-cell-type variation level, which is then used to decompose the cell-type proportions determining the spatial organization of a tissue.","paper_reference":"lopez2022destvi","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/destvi.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems","task_id":"spatial_decomposition","code_url":"https://github.com/tudaga/NMFreg_tutorial/tree/v1.0.0/openproblems/tasks","method_id":"nmfreg","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"Slide-seq: A scalable technology for measuring genome-wide expression at high spatial resolution","paper_year":2019,"references":"rodriques2019slide","is_baseline": false,"method_name":"NMF-reg","code_version":"v1.0.0","method_summary":"NMFreg is a decomposition method based on Non-negative Matrix Factorization Regression (NMFreg) that reconstructs expression of each spatial location as a weighted combination of cell-type signatures defined by scRNA-seq. It was originally developed for Slide-seq data.","paper_reference":"rodriques2019slide","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/nmfreg.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems","task_id":"spatial_decomposition","code_url":"https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.nnls.html/tree/v1.0.0/openproblems/tasks","method_id":"nnls_scipy","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"AutoGeneS: Automatic gene selection using multi-objective optimization for RNA-seq deconvolution","paper_year":2021,"references":"aliee2021autogenes","is_baseline": false,"method_name":"Non-Negative Least Squares","code_version":"v1.0.0","method_summary":"NNLS13 is a decomposition method based on Non-Negative Least Square Regression (NNLS). It was originally introduced by the method AutoGenes","paper_reference":"aliee2021autogenes","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/nnls.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems","task_id":"spatial_decomposition","code_url":"https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.NMF.html/tree/v1.0.0/openproblems/tasks","method_id":"nmf","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"Fast local algorithms for large scale nonnegative matrix and tensor factorizations","paper_year":2009,"references":"cichocki2009fast","is_baseline": false,"method_name":"Non-Negative Matrix Factorization (NMF)","code_version":"v1.0.0","method_summary":"NMF is a decomposition method based on Non-negative Matrix Factorization (NMF) that reconstructs expression of each spatial location as a weighted combination of cell-type signatures defined by scRNA-seq. It is a simpler baseline than NMFreg as it only performs the NMF step based on mean expression signatures of cell types, returning the weights loading of the NMF as (normalized) cell type proportions, without the regression step.","paper_reference":"cichocki2009fast","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/vanillanmf.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems","task_id":"spatial_decomposition","code_url":"https://github.com/openproblems-bio/openproblems/tree/v1.0.0/openproblems/tasks","method_id":"random_proportions","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"Open Problems for Single Cell Analysis","paper_year":2022,"references":"openproblems","is_baseline": true,"method_name":"Random Proportions","code_version":"v1.0.0","method_summary":"Random assignment of predicted celltype proportions from a Dirichlet distribution.","paper_reference":"openproblems","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/baseline.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-r-extras","task_id":"spatial_decomposition","code_url":"https://github.com/dmcable/spacexr/tree/v1.0.0/openproblems/tasks","method_id":"rctd","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"Robust decomposition of cell type mixtures in spatial transcriptomics","paper_year":2020,"references":"cable2021robust","is_baseline": false,"method_name":"RCTD","code_version":"v1.0.0","method_summary":"RCTD (Robust Cell Type Decomposition) is a decomposition method that uses signatures learnt from single-cell data to decompose spatial expression of tissues.  It is able to platform effect normalization step, which normalizes the scRNA-seq cell type profiles to match the platform effects of the spatial transcriptomics dataset.","paper_reference":"cable2021robust","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/rctd.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-r-extras","task_id":"spatial_decomposition","code_url":"https://satijalab.org/seurat/archive/v3.2/spatial_vignette.html/tree/v1.0.0/openproblems/tasks","method_id":"seuratv3","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"Comprehensive Integration of Single-Cell Data","paper_year":2019,"references":"stuart2019comprehensive","is_baseline": false,"method_name":"SeuratV3","code_version":"v1.0.0","method_summary":"SeuratV3 is a decomposition method that is based on Canonical Correlation Analysis (CCA).","paper_reference":"stuart2019comprehensive","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/seuratv3.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-python-pytorch","task_id":"spatial_decomposition","code_url":"https://github.com/scverse/scvi-tools/tree/v1.0.0/openproblems/tasks","method_id":"stereoscope","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"Single-cell and spatial transcriptomics enables probabilistic inference of cell type topography","paper_year":2020,"references":"andersson2020single","is_baseline": false,"method_name":"Stereoscope","code_version":"v1.0.0","method_summary":"Stereoscope is a decomposition method based on Negative Binomial regression. It is similar in scope and implementation to cell2location but less flexible to incorporate additional covariates such as batch effects and other type of experimental design annotations.","paper_reference":"andersson2020single","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/stereoscope.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems-python-pytorch","task_id":"spatial_decomposition","code_url":"https://github.com/broadinstitute/Tangram/tree/v1.0.0/openproblems/tasks","method_id":"tangram","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"Deep learning and alignment of spatially resolved single-cell transcriptomes with Tangram","paper_year":2021,"references":"biancalani2021deep","is_baseline": false,"method_name":"Tangram","code_version":"v1.0.0","method_summary":"Tangram is a method to map gene expression signatures from scRNA-seq data to spatial data. It performs the cell type mapping by learning a similarity matrix between single-cell and spatial locations based on gene expression profiles.","paper_reference":"biancalani2021deep","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/tangram.py"},{"image":"https://github.com/openproblems-bio/openproblems/pkgs/container/openproblems","task_id":"spatial_decomposition","code_url":"https://github.com/openproblems-bio/openproblems/tree/v1.0.0/openproblems/tasks","method_id":"true_proportions","commit_sha":"b3456fd73c04c28516f6df34c57e6e3e8b0dab32","paper_name":"Open Problems for Single Cell Analysis","paper_year":2022,"references":"openproblems","is_baseline": true,"method_name":"True Proportions","code_version":"v1.0.0","method_summary":"Perfect assignment of predicted celltype proportions from the ground truth.","paper_reference":"openproblems","implementation_url":"https://github.com/openproblems-bio/openproblems/blob/v1.0.0/openproblems/tasks/spatial_decomposition/methods/baseline.py"}]